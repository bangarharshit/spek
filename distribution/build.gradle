apply plugin: 'base'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

apply from: "$rootDir/gradle/common/dependencies.gradle"

description = 'Spek Distribution packages'


def artifact(publication, project, artifactName) {
    def configure = {
        groupId = 'org.spekframework.spek2'
        artifactId = artifactName
        version = rootProject.version

        from project.components.java
        artifact project.tasks['sourceJar']
        artifact project.tasks['javadocJar']

        pom.withXml {
            asNode().children().last() + {
                resolveStrategy =  DELEGATE_FIRST
                name 'Spek'
                description 'A Specification Framework for Kotlin'
                url 'https://spekframework.github.io/spek'

                licenses {
                    license {
                        name 'BSD New'
                        url 'https://github.com/spekframework/spek/blob/master/LICENSE.TXT'
                        distribution 'spek'
                    }
                }
                developers {
                    developer {
                        id 'Spek Framework'
                        name 'Spek Contributors'
                        organization 'Spek Framework'
                    }
                }
                scm {
                    connection 'scm:git:git://github.com/spekframework/spek.git'
                    developerConnection 'scm:git:https://github.com/spekframework/spek.git'
                    url 'http://github.com/spekframework/spek'
                }
            }
        }
    }

    configure.resolveStrategy =  Closure.DELEGATE_FIRST
    configure.delegate = publication
    configure()
}

publishing {
    publications {
        dslCommon(MavenPublication) { artifact(delegate, project(':spek-dsl:common'), 'spek-dsl-common') }
        dslJvm(MavenPublication) { artifact(delegate, project(':spek-dsl:jvm'), 'spek-dsl-jvm') }

        runtimeCommon(MavenPublication) { artifact(delegate, project(':spek-runtime:common'), 'spek-runtime-common') }
        runtimeJvm(MavenPublication) { artifact(delegate, project(':spek-runtime:jvm'), 'spek-runtime-jvm') }

        runnerJUnit5(MavenPublication) { artifact(delegate, project(':spek-runner:junit5'), 'spek-runner-junit5') }

        extensionDataDrivenCommon(MavenPublication) { artifact(delegate, project(':spek-extension:data-driven:common'), 'spek-extension-data-driven-common') }
        extensionDataDrivenJvm(MavenPublication) { artifact(delegate, project(':spek-extension:data-driven:jvm'), 'spek-extension-data-driven-jvm') }

        extensionSubjectCommon(MavenPublication) { artifact(delegate, project(':spek-extension:subject:common'), 'spek-extension-subject-common') }
        extensionSubjectJvm(MavenPublication) { artifact(delegate, project(':spek-extension:subject:jvm'), 'spek-extension-subject-jvm') }
    }
}

def artifacts = [
    'dslCommon',
    'dslJvm',
    'runtimeCommon',
    'runtimeJvm',
    'runnerJUnit5',
    'extensionDataDrivenCommon',
    'extensionDataDrivenJvm',
    'extensionSubjectCommon',
    'extensionSubjectJvm'
]

bintray {
    user = "${bintrayUser}"
    key = "${bintrayApiKey}"
    publish = false

    pkg {
        repo = 'spek'
        desc = "Specification framework for the JVM"
        name = 'spek'
        userOrg = 'spekframework'
        licenses = ['BSD New']
        labels = ['kotlin', 'testing', 'specification-framework']
        vcsUrl = 'https://github.com/spekframework/spek.git'

        githubRepo = 'spekframework/spek'


        version {
            name = rootProject.version
        }
    }

    publications = artifacts
}
